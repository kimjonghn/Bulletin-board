<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bulletinboard.repository.UserRepository">
	
	<resultMap type="com.example.bulletinboard.entity.User" id="UserMap">
		<id property="userId" column="user_id"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<collection property="authorities" javaType="list" resultMap="AuthorityMap"/>
	</resultMap>
	
	<resultMap type="com.example.bulletinboard.entity.Authority" id="AuthorityMap">
		<id property="authorityId" column="authority_id" />
		<result property="userId" column="user_id" />
		<result property="roleId" column="role_id" />
		<association property="role" resultMap="RoleMap"/>
	</resultMap>
	
	<resultMap type="com.example.bulletinboard.entity.Role" id="RoleMap">
		<id property="roleId" column="role_id"/>
		<result property="roleName" column="role_name"/>
	</resultMap>
	
	<select id="findUserByEmail" resultMap="UserMap">
		select
			ut.user_id,
		    ut.email,
		    ut.password,
		    ut.name,
		    
		    at.authority_id,
		    at.user_id,
		    at.role_id,
		    
		    rt.role_id,
		    rt.role_name
		from
			user_tb ut
		    left outer join authority_tb at on(at.user_id = ut.user_id)
		    left outer join role_tb rt on(rt.role_id = at.role_id)
		where
			ut.email = #{email}
	</select>
	
	<insert id="saveUser" parameterType="com.example.bulletinboard.entity.User" useGeneratedKeys="true" keyProperty="userId">
		insert into user_tb
		values (0, #{email}, #{password}, #{name})
	</insert>
	<insert id="saveAuthority" parameterType="com.example.bulletinboard.entity.Authority">
		insert into authority_tb
		values (0, #{userId}, #{roleId})
	</insert>
	<delete id="userDelete" parameterType="com.example.bulletinboard.entity.User">
		delete from
			user_tb
		where
			user_id = #{userId}
	</delete>
</mapper>